name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Start services with Docker Compose
        run: docker-compose up -d

      - name: Wait for services to be healthy
        run: |
          sleep 30
          docker-compose ps

      - name: Test Cluster Services
        run: |
          chmod +x ./test_cluster.sh
          ./test_cluster.sh

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Run Backend Linter
        working-directory: ./backend
        run: npm run lint

      - name: Run Backend Tests
        working-directory: ./backend
        env:
          FLUENTD_HOST: logs
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          POSTGRES_HOST: localhost
        run: npm run test

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run Frontend Linter
        working-directory: ./frontend
        run: npm run lint

      - name: Run Frontend Tests
        working-directory: ./frontend
        run: npm run test

      - name: Stop and clean up Docker Compose
        if: always()
        run: docker-compose down --volumes
